#!/usr/bin/env bash
# Bootstraps a Machine
OS="{{ .chezmoi.os }}"
#ARCH="{{ .chezmoi.arch }}"

echo "Running first init on {{ .chezmoi.os }}"

echo "Installing Dependencies"
if [[ "$OS" == "darwin" ]]; then
  if ! command -v brew >/dev/null 2>&1; then
    echo " -> Installing Homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  echo " -> Installing Brew Packages"
  brew bundle --no-lock --file=/dev/stdin <<EOF
    # Taps
    tap 'homebrew/cask'
    tap 'homebrew/cask-fonts'
    tap 'homebrew/core'

    # Packages
    brew 'bash' # Latest Bash because GPL...
    brew 'zsh' # Latest ZSH
    brew 'chezmoi' # Ensure we have chezmoi post-install
    brew 'coreutils'
    brew 'tmux'
    brew 'fzf'
    brew 'nvim'
    brew 'kubectl'
    brew 'zplug'
    brew 'fd'
    brew 'bat'
    brew 'lsd'
    brew 'jq'
    brew 'wget'

    # Applications
    mas "Tailscale", id:1470499037
    mas "Telegram", id:747648890
    cask "1password-cli"
    cask "1password"
    cask "google-chrome" unless File.directory?('/Applications/Google Chrome.app')
    cask "visual-studio-code" unless File.directory?('/Applications/Visual Studio Code.app')
    cask "iterm2" unless File.directory?('/Applications/iTerm.app')
    cask 'docker' unless File.directory?('/Applications/Docker.app')

    # Fonts
    cask "font-hack-nerd-font"
EOF
elif [[ "$OS" == "linux" ]]; then
  echo " -> Installing zplug"
  # HACK: Hardcoded path.
  export ZPLUG_HOME=/opt/zplug
  if [[ ! -e "$ZPLUG_HOME" ]]; then
    sudo mkdir -p "$ZPLUG_HOME"
    sudo chown "$(whoami):$(whoami)" "$ZPLUG_HOME"
    curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
  fi

  echo " -> Setting up APT Repositories"
  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

  echo " -> Installing System Packages"
  sudo apt update
  sudo apt install tmux fzf neovim bat kubectl cargo

  echo " -> Installing Rust Package(s)"
  CARGO_NET_GIT_FETCH_WITH_CLI=true cargo install lsd
else
  echo "Warning: Unsupported Operating System '$OS'"
  echo "Please install the following tools yourself:"
  echo " - zplug"
  echo " - fzf"
  echo " - tmux"
  echo " - nvim"
  echo " - kubectl"
  echo " - fd"
  echo " - bat"
  echo " - lsd"
  echo
  echo "Please do this before starting a new terminal session."
  exit 1
fi
