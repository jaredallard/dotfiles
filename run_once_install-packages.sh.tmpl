#!/usr/bin/env bash
# vim: set ai ts=2 sw=2 et sts=2 ft=zsh :
# shellcheck shell=bash
# Bootstraps a Machine
set -euo pipefail

OS="{{ .chezmoi.os }}"
#ARCH="{{ .chezmoi.arch }}"

echo "Running first init on {{ .chezmoi.os }}"

echo "Installing Dependencies"
if [[ "$OS" == "darwin" ]]; then
  if ! command -v brew >/dev/null 2>&1; then
    echo " -> Installing Homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  echo " -> Installing Brew Packages"
  brew bundle --no-lock --file=/dev/stdin <<EOF
    # Taps
    tap 'homebrew/cask'
    tap 'homebrew/cask-fonts'
    tap 'homebrew/core'

    # Packages
    brew 'bash' # Latest Bash because GPL...
    brew 'zsh' # Latest ZSH
    brew 'chezmoi' # Ensure we have chezmoi post-install
    brew 'coreutils'
    brew 'tmux'
    brew 'fzf'
    brew 'nvim'
    brew 'kubectl'
    brew 'fd'
    brew 'bat'
    brew 'lsd'
    brew 'jq'
    brew 'wget'
    brew 'gh'
    brew 'pam-reattach' # For TouchID

    # Applications
    mas "Tailscale", id:1475387142
    mas "Telegram", id:747648890
    cask "1password-cli"
    cask "1password" unless File.directory?('/Applications/1Password.app')
    cask "google-chrome" unless File.directory?('/Applications/Google Chrome.app')
    cask "visual-studio-code" unless File.directory?('/Applications/Visual Studio Code.app')
    cask "iterm2" unless File.directory?('/Applications/iTerm.app')
    cask 'docker' unless File.directory?('/Applications/Docker.app')

    # Fonts
    cask "font-hack-nerd-font"
EOF
elif [[ "$OS" == "linux" ]] && command -v apt &>/dev/null; then
  echo " -> Setting up APT Repositories"
  # Kubernetes
  curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
  echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

  # Github CLI
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null

  echo " -> Installing System Packages"
  sudo apt-get update
  sudo apt-get install -y tmux fzf neovim bat kubectl gh

  if [[ -e "bin/chezmoi" ]]; then
    echo " -> Persisting chezmoi install"
    sudo cp bin/chezmoi /usr/local/bin/chezmoi
  fi
else
  echo "Warning: Unsupported Operating System '$OS' (if Linux, only Debian-based distributions are supported)"
  echo "Please install the following tools yourself:"
  echo " - fzf"
  echo " - tmux"
  echo " - nvim"
  echo " - kubectl"
  echo " - fd"
  echo " - bat"
  echo " - lsd"
  echo
  echo "Please do this before starting a new terminal session."
  exit 1
fi

# Terrible hack to see if we're in a terminal or not. If we aren't, skip
# interactive setup steps.
if [[ -n $TERM ]]; then
  if ! gh auth status >/dev/null 2>&1; then
    echo " -> Authenticating with GitHub"
    gh auth login
  fi
fi
